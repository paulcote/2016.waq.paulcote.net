server {
	listen 80;
	listen [::]:80;

	root /www/sites/waq2016/current/public;
	index index.php index.html;

	server_name 2016.waq.paulcote.net;

	error_log /www/logs/waq2016/error.log warn;
	access_log /www/logs/waq2016/access.log;

   	# WordPress single blog rules.
   	# Designed to be included in any server {} block.

   	# This order might seem weird - this is attempted to match last if rules below fail.
   	# http://wiki.nginx.org/HttpCoreModule
   	location / {
   		try_files $uri $uri/ /index.php?$args;
   	}

	if (!-e $request_filename) {
		rewrite /wp-admin$ $scheme://$host$uri/ permanent;
		rewrite ^(/[^/]+)?(/wp-.*) /wp$2 last;
		rewrite ^(/[^/]+)?(/.*\.php)$ /wp$2 last;
	}

   	# Directives to send expires headers and turn off 404 error logging.
   	location ~* ^.+\.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
   	       access_log off; log_not_found off; expires max;
   	}

   	# Pass all .php files onto a php-fpm/php-fcgi server.
   	location ~ [^/]\.php(/|$) {
   		fastcgi_split_path_info ^(.+?\.php)(/.*)$;
   		if (!-f $document_root$fastcgi_script_name) {
   			return 404;
   		}
   		# This is a robust solution for path info security issue and works with "cgi.fix_pathinfo = 1" in /etc/php.ini (default)

   		fastcgi_pass unix:/var/run/php5-fpm.sock;
   		fastcgi_index index.php;
   		include fastcgi_params;
   	}
}
